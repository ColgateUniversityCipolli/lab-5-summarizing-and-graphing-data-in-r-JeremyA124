if("Within Range" %in% column.check[[8]]){
in.range.columns = c(in.range.columns, columns)
}
}
test <- allen.bounds()
test[[8]]
test[[9]]
test[[10]]
colnames(test)
View(test)
allen.bounds <- function(feature = "overall_loudness",
data = all.data) {
summarize.data <- data |>
mutate(feature = as.numeric(get({feature}))) |>
group_by(artist) |>
summarize(
minimum = min({feature}, na.rm = TRUE),
maximum = max({feature}, na.rm = TRUE),
LF = quantile({feature}, 0.25, na.rm = TRUE) - 1.5 * IQR({feature}, na.rm = TRUE),
UF = quantile({feature}, 0.75, na.rm = TRUE) + 1.5 * IQR({feature}, na.rm = TRUE),
) |>
mutate(
allen.feature = get(feature, allen.data),
out.of.range = ifelse(minimum > allen.feature | maximum < allen.feature,
TRUE,
FALSE),
unusual = ifelse(LF > allen.feature | UF < allen.feature,
TRUE,
FALSE),
description = ifelse(unusual == TRUE,
ifelse(out.of.range == TRUE,
"Out of Range",
"Outlying"),
"Within Range")
) |>
select(-allen.feature)
return(summarize.data)
}
test <- allen.bounds()
for(columns in columns.scan) {
column.check = allen.bounds(columns)
if("Within Range" %in% column.check[[8]]){
in.range.columns = c(in.range.columns, columns)
}
}
#loading the data sets
allen.data = read_csv("data/essentia.data.allentown.csv")
all.data = read_csv("data/essentia.data.csv")
allen.bounds <- function(feature = "overall_loudness",
data = all.data) {
summarize.data <- data |>
mutate(feature = as.numeric(get({feature}))) |>
group_by(artist) |>
summarize(
minimum = min({feature}, na.rm = TRUE),
maximum = max({feature}, na.rm = TRUE),
LF = quantile({feature}, 0.25, na.rm = TRUE) - 1.5 * IQR({feature}, na.rm = TRUE),
UF = quantile({feature}, 0.75, na.rm = TRUE) + 1.5 * IQR({feature}, na.rm = TRUE),
) |>
mutate(
allen.feature = get(feature, allen.data),
out.of.range = ifelse(minimum > allen.feature | maximum < allen.feature,
TRUE,
FALSE),
unusual = ifelse(LF > allen.feature | UF < allen.feature,
TRUE,
FALSE),
description = ifelse(unusual == TRUE,
ifelse(out.of.range == TRUE,
"Out of Range",
"Outlying"),
"Within Range")
) |>
select(-allen.feature)
return(summarize.data)
}
test <- allen.bounds()
test[[8]]
columns.class = sapply(all.data, class)
columns.not = which(columns.class != "numeric")
columns.scan = colnames(all.data)[-columns.not]
in.range.columns = c()
for(columns in columns.scan) {
column.check = allen.bounds(columns)
if("Within Range" %in% column.check[[8]]){
in.range.columns = c(in.range.columns, columns)
}
}
columns.class = sapply(all.data, class)
columns.not = which(columns.class != "numeric")
columns.scan = str_split(colnames(final.dataframe), " ", simplify = TRUE)[-columns.not,]
in.range.columns = c()
for(columns in columns.scan) {
column.check = allen.bounds(columns)
if("Within Range" %in% column.check[[8]]){
in.range.columns = c(in.range.columns, columns)
}
}
#loading the libraries
library("tidyverse")
#loading the data sets
allen.data = read_csv("data/essentia.data.allentown.csv")
all.data = read_csv("data/essentia.data.csv")
allen.bounds <- function(feature = "overall_loudness",
data = all.data) {
summarize.data <- data |>
mutate(feature = as.numeric(get({feature}))) |>
group_by(artist) |>
summarize(
minimum = min({feature}, na.rm = TRUE),
maximum = max({feature}, na.rm = TRUE),
LF = quantile({feature}, 0.25, na.rm = TRUE) - 1.5 * IQR({feature}, na.rm = TRUE),
UF = quantile({feature}, 0.75, na.rm = TRUE) + 1.5 * IQR({feature}, na.rm = TRUE),
) |>
mutate(
allen.feature = get(feature, allen.data),
out.of.range = ifelse(minimum > allen.feature | maximum < allen.feature,
TRUE,
FALSE),
unusual = ifelse(LF > allen.feature | UF < allen.feature,
TRUE,
FALSE),
description = ifelse(unusual == TRUE,
ifelse(out.of.range == TRUE,
"Out of Range",
"Outlying"),
"Within Range")
) |>
select(-allen.feature)
return(summarize.data)
}
columns.class = sapply(all.data, class)
columns.not = which(columns.class != "numeric")
columns = str_split(colnames(all.data), " ", simplify = TRUE)[-columns.not,]
out.range.columns = c()
for(column in columns) {
summarized = allen.bounds(column)
if("Out of Range" %in% summarized[[8]]) {
out.range.columns = c(out.range.columns, column)
}
}
view(allen.bounds("zerocrossingrate"))
out.range.columns = c()
for(column in columns) {
summarized = allen.bounds(column)
if("Within Range" %in% summarized[[8]]) {
out.range.columns = c(out.range.columns, column)
}
}
view(allen.bounds("overall_loudness"))
view(allen.bounds("spectral_energy"))
allen.data$spectral_energy
columns.class = sapply(all.data, class)
columns.not = which(columns.class != "numeric")
columns = str_split(colnames(all.data), " ", simplify = TRUE)[-columns.not,]
out.range.columns = c()
for(column in columns) {
summarized = allen.bounds(column)
if("Out of Range" %in% summarized[[8]]) {
out.range.columns = c(out.range.columns, column)
}
}
colnames(out.range.columns)
out.range.columns
ggplot(aes(x = artists,
y = zerocrossingrate),
data = all.data) +
geom_col()
ggplot(aes(x = artist,
y = zerocrossingrate),
data = all.data) +
geom_col()
for(colums in columns) {
summarized = allen.bounds(column)[[8]]
all.columns = rbind(all.columns,
summarized)
}
all.columns = c()
for(colums in columns) {
summarized = allen.bounds(column)[[8]]
all.columns = rbind(all.columns,
summarized)
}
View(all.data)
View(all.columns)
for(column in columns) {
summarized = allen.bounds(column)[[8]]
all.columns = rbind(all.columns,
summarized)
}
all.columns = c()
for(column in columns) {
summarized = allen.bounds(column)[[8]]
all.columns = rbind(all.columns,
summarized)
}
allen.bounds()[[8]]
view(allen.bounds("valence"))
allen.bounds("valence")[[3]]
allen.bounds("valence")[[8]][3]
all.desc = c()
for(column in columns) {
summarized = allen.bounds(column)[[8]]
all.desc = rbind(all.columns,
summarized)
}
View(all.desc)
all.descriptions = c()
for(column in columns) {
summarized = allen.bounds(column)[[8]]
all.descriptions = rbind(all.columns,
summarized)
}
?pivot_longer
sum.descriptions = all.descriptions |>
pivot_longer(names_to = c("All Get Out", "Manchester Orchestra", "The Front Bottoms"),
values_to = "description")
columns.class
columns.not
sum.descriptions = all.descriptions |>
pivot_longer(names_to = c("All Get Out", "Manchester Orchestra", "The Front Bottoms"),
values_to = "description")
sum.descriptions = data.frame(all.descriptions) |>
pivot_longer(names_to = c("All Get Out", "Manchester Orchestra", "The Front Bottoms"),
values_to = "description")
sum.descriptions = data.frame(all.descriptions) |>
pivot_longer(cols = everything(),
names_to = c("All Get Out", "Manchester Orchestra", "The Front Bottoms"),
values_to = "description")
sum.descriptions = data.frame(all.descriptions) |>
pivot_wider(cols = everything(),
names_to = c("All Get Out", "Manchester Orchestra", "The Front Bottoms"),
values_to = "description")
?pivot_wider
sum.descriptions = data.frame(all.descriptions) |>
pivot_wider(names_from = c("All Get Out", "Manchester Orchestra", "The Front Bottoms"),
values_from = "description")
sum.descriptions = data.frame(all.descriptions) |>
pivot_wider(names_from = c("25%", "25%.1", "25%.2"),
values_from = "description")
test = data.frame(all.descriptions)
View(test)
colnames(test)
sum.descriptions = data.frame(all.descriptions) |>
pivot_wider(names_from = c("X25%", "X25%..1", "X25%..2"),
values_from = "description")
sum.descriptions = data.frame(all.descriptions) |>
pivot_wider(names_from = c("X25%.", "X25%..1", "X25%..2"),
values_from = "description")
sum.descriptions = data.frame(all.descriptions) |>
pivot_wider(names_from = c("X25.", "X25..1", "X25..2"),
values_from = "description")
sum.descriptions = data.frame(all.descriptions) |>
pivot_wider(names_from = c("X25.", "X25..1", "X25..2"))
View(test)
sum.descriptions = data.frame(all.descriptions) |>
pivot_wider(names_from = c("X25.", "X25..1", "X25..2"),
values_from = starts_with("summarized"))
sum.descriptions = data.frame(all.descriptions) |>
pivot_wider(values_from = c("X25.", "X25..1", "X25..2"),
names_from = starts_with("summarized"))
vignette("pivot")
#loading the libraries
library("tidyverse")
#loading the data sets
allen.data = read_csv("data/essentia.data.allentown.csv")
all.data = read_csv("data/essentia.data.csv")
allen.bounds <- function(feature = "overall_loudness",
data = all.data) {
summarize.data <- data |>
mutate(feature = as.numeric(get({feature}))) |>
group_by(artist) |>
summarize(
minimum = min({feature}, na.rm = TRUE),
maximum = max({feature}, na.rm = TRUE),
LF = quantile({feature}, 0.25, na.rm = TRUE) - 1.5 * IQR({feature}, na.rm = TRUE),
UF = quantile({feature}, 0.75, na.rm = TRUE) + 1.5 * IQR({feature}, na.rm = TRUE),
) |>
mutate(
allen.feature = get(feature, allen.data),
out.of.range = ifelse(minimum > allen.feature | maximum < allen.feature,
TRUE,
FALSE),
unusual = ifelse(LF > allen.feature | UF < allen.feature,
TRUE,
FALSE),
description = ifelse(unusual == TRUE,
ifelse(out.of.range == TRUE,
"Out of Range",
"Outlying"),
"Within Range")
) |>
select(-allen.feature)
return(summarize.data)
}
columns.class = sapply(all.data, class)
columns.not = which(columns.class != "numeric")
columns = str_split(colnames(all.data), " ", simplify = TRUE)[-columns.not,]
out.range.columns = c()
all.descriptions = c()
for(column in columns) {
summarized = allen.bounds(column)
if("Out of Range" %in% summarized[[8]]) {
out.range.columns = c(out.range.columns, column)
}
}
for(column in columns) {
summarized = allen.bounds(column)[[8]]
all.descriptions = rbind(all.columns,
summarized)
}
for(column in columns) {
summarized = allen.bounds(column)[[8]]
all.descriptions = rbind(all.descriptions,
summarized)
}
View(all.descriptions)
all.descriptions = c()
for(column in columns) {
summarized = allen.bounds(column)[[8]]
all.descriptions = cbind(all.descriptions,
summarized)
}
View(all.descriptions)
?count
?rowwise
colnames(all.descriptions)
all.descriptions = c()
for(column in columns) {
summarized = allen.bounds(column)[[8]]
all.descriptions = rbind(all.descriptions,
summarized)
}
colnames(all.descriptions)
colnames(data.frame(all.descriptions))
in.range.sum <- data.frame(all.descriptions) |>
mutate(
X25. = case_when(X25. == "Within Range" ~ 1,
TRUE                   ~ 0)
)
View(in.range.sum)
in.range.sum <- data.frame(all.descriptions) |>
mutate(
X25. = case_when(X25. == "Within Range" ~ 1,
TRUE                   ~ 0),
X25..1 = case_when(X25. == "Within Range" ~ 1,
TRUE                   ~ 0),
X25..2 = case_when(X25. == "Within Range" ~ 1,
TRUE                   ~ 0)
)
in.range.sum <- data.frame(all.descriptions) |>
mutate(
X25. = case_when(X25. == "Within Range" ~ 1,
TRUE                   ~ 0),
X25..1 = case_when(X25..1 == "Within Range" ~ 1,
TRUE                   ~ 0),
X25..2 = case_when(X25..2 == "Within Range" ~ 1,
TRUE                   ~ 0)
)
in.range.sum <- data.frame(all.descriptions) |>
mutate(
X25. = case_when(X25. == "Within Range" ~ 1,
TRUE                   ~ 0),
X25..1 = case_when(X25..1 == "Within Range" ~ 1,
TRUE                   ~ 0),
X25..2 = case_when(X25..2 == "Within Range" ~ 1,
TRUE                   ~ 0),
X25. = sum(X25),
X25..1 = sum(X25..1),
X25..2 = sum(X25..2)
)
in.range.sum <- data.frame(all.descriptions) |>
mutate(
X25. = case_when(X25. == "Within Range" ~ 1,
TRUE                   ~ 0),
X25..1 = case_when(X25..1 == "Within Range" ~ 1,
TRUE                   ~ 0),
X25..2 = case_when(X25..2 == "Within Range" ~ 1,
TRUE                   ~ 0),
X25. = sum(X25.),
X25..1 = sum(X25..1),
X25..2 = sum(X25..2)
)
in.range.sum <- data.frame(all.descriptions) |>
mutate(
X25. = case_when(X25. == "Within Range" ~ 1,
TRUE                   ~ 0),
X25..1 = case_when(X25..1 == "Within Range" ~ 1,
TRUE                   ~ 0),
X25..2 = case_when(X25..2 == "Within Range" ~ 1,
TRUE                   ~ 0),
) |>
summarise(
X25. = sum(X25.),
X25..1 = sum(X25..1),
X25..2 = sum(X25..2)
)
#loading the libraries
library("tidyverse")
#loading the data sets
allen.data = read_csv("data/essentia.data.allentown.csv")
all.data = read_csv("data/essentia.data.csv")
allen.bounds <- function(feature = "overall_loudness",
data = all.data) {
summarize.data <- data |>
mutate(feature = as.numeric(get({feature}))) |>
group_by(artist) |>
summarize(
minimum = min({feature}, na.rm = TRUE),
maximum = max({feature}, na.rm = TRUE),
LF = quantile({feature}, 0.25, na.rm = TRUE) - 1.5 * IQR({feature}, na.rm = TRUE),
UF = quantile({feature}, 0.75, na.rm = TRUE) + 1.5 * IQR({feature}, na.rm = TRUE),
) |>
mutate(
allen.feature = get(feature, allen.data),
out.of.range = ifelse(minimum > allen.feature | maximum < allen.feature,
TRUE,
FALSE),
unusual = ifelse(LF > allen.feature | UF < allen.feature,
TRUE,
FALSE),
description = ifelse(unusual == TRUE,
ifelse(out.of.range == TRUE,
"Out of Range",
"Outlying"),
"Within Range")
) |>
select(-allen.feature)
return(summarize.data)
}
columns.class = sapply(all.data, class)
columns.not = which(columns.class != "numeric")
columns = str_split(colnames(all.data), " ", simplify = TRUE)[-columns.not,]
out.range.columns = c()
all.descriptions = c()
for(column in columns) {
summarized = allen.bounds(column)
if("Out of Range" %in% summarized[[8]]) {
out.range.columns = c(out.range.columns, column)
}
}
for(column in columns) {
summarized = allen.bounds(column)[[8]]
all.descriptions = rbind(all.descriptions,
summarized)
}
in.range.sum <- data.frame(all.descriptions) |>
mutate(
X25. = case_when(X25. == "Within Range" ~ 1,
TRUE                   ~ 0),
X25..1 = case_when(X25..1 == "Within Range" ~ 1,
TRUE                   ~ 0),
X25..2 = case_when(X25..2 == "Within Range" ~ 1,
TRUE                   ~ 0),
) |>
summarise(
X25. = sum(X25.),
X25..1 = sum(X25..1),
X25..2 = sum(X25..2)
)
ggplot(aes(x = ))
View(in.range.sum)
View(in.range.sum)
in.range.sum <- data.frame(all.descriptions) |>
mutate(
X25. = case_when(X25. == "Within Range" ~ 1,
TRUE                   ~ 0),
X25..1 = case_when(X25..1 == "Within Range" ~ 1,
TRUE                   ~ 0),
X25..2 = case_when(X25..2 == "Within Range" ~ 1,
TRUE                   ~ 0),
) |>
summarise(
AllGetOut = sum(X25.),
ManchesterOrchestra = sum(X25..1),
TheFrontBottoms = sum(X25..2)
)
in.range.sum <- data.frame(all.descriptions) |>
mutate(
X25. = case_when(X25. == "Within Range" ~ 1,
X25. == "Outlying"     ~ 0.5,
TRUE                   ~ 0),
X25..1 = case_when(X25..1 == "Within Range" ~ 1,
X25..1 == "Outlying"     ~ 0.5,
TRUE                   ~ 0),
X25..2 = case_when(X25..2 == "Within Range" ~ 1,
X25..2 == "Outlying"     ~ 0.5,
TRUE                   ~ 0),
) |>
summarise(
AllGetOut = sum(X25.),
ManchesterOrchestra = sum(X25..1),
TheFrontBottoms = sum(X25..2)
)
description.sum <- data.frame(all.descriptions) |>
mutate(
X25. = case_when(X25. == "Within Range" ~ 1,
X25. == "Outlying"     ~ 0.5,
TRUE                   ~ 0),
X25..1 = case_when(X25..1 == "Within Range" ~ 1,
X25..1 == "Outlying"     ~ 0.5,
TRUE                   ~ 0),
X25..2 = case_when(X25..2 == "Within Range" ~ 1,
X25..2 == "Outlying"     ~ 0.5,
TRUE                   ~ 0),
) |>
summarise(
AllGetOut = sum(X25.),
ManchesterOrchestra = sum(X25..1),
TheFrontBottoms = sum(X25..2)
)
View(description.sum)
